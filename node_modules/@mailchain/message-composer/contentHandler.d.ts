import { StringHeader, ContentPart } from './types.js';
import { MessageComposerContext } from './messageComposerContext.js';

type BuiltContentPart = string | {
    boundaryHeader: StringHeader;
    content: string;
};
declare function buildMessageAndAttachments(messageParts: ContentPart[], attachmentParts: ContentPart[], ctx: MessageComposerContext): Promise<BuiltContentPart>;
declare function buildContentParts(parts: ContentPart[], forceMultipart: true, ctx: MessageComposerContext): Promise<{
    boundary: string;
    parts: string;
}>;
declare function buildContentParts(parts: ContentPart[], forceMultipart: false, ctx: MessageComposerContext): Promise<string | {
    boundary: string;
    parts: string;
}>;
declare function buildContentPart({ content, headers }: ContentPart, ctx: MessageComposerContext): Promise<string>;

export { BuiltContentPart, buildContentPart, buildContentParts, buildMessageAndAttachments };
