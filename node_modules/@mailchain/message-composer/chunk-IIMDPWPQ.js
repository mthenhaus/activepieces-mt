"use strict";Object.defineProperty(exports, "__esModule", {value: true});


var _chunkX4UF3TJQjs = require('./chunk-X4UF3TJQ.js');


var _chunkYLOVGC5Gjs = require('./chunk-YLOVGC5G.js');

// src/fallback.ts
async function concludeHeaders(headers, ctx) {
  const finalHeaders = new Map(headers);
  const fromHeader = finalHeaders.get(_chunkYLOVGC5Gjs.HEADER_LABELS.From);
  if (fromHeader == null)
    throw new Error("defining FROM is required, more info https://www.rfc-editor.org/rfc/rfc5322#section-3.6");
  finalHeaders.set(_chunkYLOVGC5Gjs.HEADER_LABELS.MimeVersion, _chunkX4UF3TJQjs.createHeader.call(void 0, _chunkYLOVGC5Gjs.HEADER_LABELS.MimeVersion, "1.0"));
  if (!finalHeaders.has(_chunkYLOVGC5Gjs.HEADER_LABELS.MessageId)) {
    finalHeaders.set(_chunkYLOVGC5Gjs.HEADER_LABELS.MessageId, await fallbackMessageId(fromHeader.value[0], ctx));
  }
  if (!finalHeaders.has(_chunkYLOVGC5Gjs.HEADER_LABELS.Date)) {
    finalHeaders.set(_chunkYLOVGC5Gjs.HEADER_LABELS.Date, await fallbackDate(ctx));
  }
  return finalHeaders;
}
async function fallbackMessageId(from, ctx) {
  const senderDomain = from.address.split("@")[1];
  const idValue = await ctx.encodeBase64(await ctx.random(32));
  return _chunkX4UF3TJQjs.createMessageIdHeader.call(void 0, _chunkYLOVGC5Gjs.HEADER_LABELS.MessageId, [`${idValue}@${senderDomain}`]);
}
async function fallbackDate(_ctx) {
  return _chunkX4UF3TJQjs.createHeader.call(void 0, _chunkYLOVGC5Gjs.HEADER_LABELS.Date, /* @__PURE__ */ new Date());
}





exports.concludeHeaders = concludeHeaders; exports.fallbackMessageId = fallbackMessageId; exports.fallbackDate = fallbackDate;
