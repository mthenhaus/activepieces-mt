"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }

var _chunkNHHJK76Ajs = require('./chunk-NHHJK76A.js');


var _chunk7PJX5CXIjs = require('./chunk-7PJX5CXI.js');

// src/axios/axios.ts
var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);
var _encoding = require('@mailchain/encoding');
var getAxiosWithSigner = (requestKey) => {
  const axiosInstance = _axios2.default.create();
  axiosInstance.interceptors.request.use(async (request) => {
    if (request.headers) {
      const expires = Math.floor(Date.now() / 1e3 + 60 * 5);
      const tokenPayload = _chunk7PJX5CXIjs.createTokenPayload.call(void 0, 
        new URL(_nullishCoalesce(_optionalChain([request, 'optionalAccess', _ => _.url]), () => ( ""))),
        _nullishCoalesce(_optionalChain([request, 'access', _2 => _2.method, 'optionalAccess', _3 => _3.toUpperCase, 'call', _4 => _4()]), () => ( "")),
        request.data,
        expires
      );
      const token = await _chunkNHHJK76Ajs.signJWT.call(void 0, requestKey, tokenPayload);
      request.headers.Authorization = `vapid t=${token}, k=${_encoding.encodeBase64UrlSafe.call(void 0, requestKey.publicKey.bytes)}`;
    }
    return request;
  });
  return axiosInstance;
};



exports.getAxiosWithSigner = getAxiosWithSigner;
