import {
  signJWT
} from "./chunk-7BXWT265.mjs";
import {
  createTokenPayload
} from "./chunk-O3WFX3UX.mjs";

// src/axios/axios.ts
import axios from "axios";
import { encodeBase64UrlSafe } from "@mailchain/encoding";
var getAxiosWithSigner = (requestKey) => {
  const axiosInstance = axios.create();
  axiosInstance.interceptors.request.use(async (request) => {
    if (request.headers) {
      const expires = Math.floor(Date.now() / 1e3 + 60 * 5);
      const tokenPayload = createTokenPayload(
        new URL(request?.url ?? ""),
        request.method?.toUpperCase() ?? "",
        request.data,
        expires
      );
      const token = await signJWT(requestKey, tokenPayload);
      request.headers.Authorization = `vapid t=${token}, k=${encodeBase64UrlSafe(requestKey.publicKey.bytes)}`;
    }
    return request;
  });
  return axiosInstance;
};

export {
  getAxiosWithSigner
};
