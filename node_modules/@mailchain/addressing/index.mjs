import {
  createWalletAddress
} from "./chunk-FHU6DY7E.mjs";
import {
  isSameAddress
} from "./chunk-MPEKXU6P.mjs";
import {
  formatAddress
} from "./chunk-EDZVKNNH.mjs";
import "./chunk-BZ3DN65T.mjs";
import "./chunk-TNDO2PDN.mjs";
import "./chunk-XPEND7LX.mjs";
import "./chunk-ZO2YQCZV.mjs";
import {
  addressFromPublicKey
} from "./chunk-JVPBP3WU.mjs";
import {
  isEthereumAddress,
  isFilecoinAddress,
  isMailchainAccountAddress,
  isNearImplicitAccount,
  isSolanaAddress,
  isTezosAddress,
  isTokenAddress
} from "./chunk-5DXGVNVQ.mjs";
import {
  createNameServiceAddress,
  isNameServiceAddress,
  parseNameServiceAddress
} from "./chunk-EDI5FTJ3.mjs";
import {
  parseWalletAddress
} from "./chunk-DGHYOYLZ.mjs";
import {
  checkAddressForErrors
} from "./chunk-MFA2GWPD.mjs";
import {
  BadlyFormattedAddressError,
  IdentityProviderAddressInvalidError
} from "./chunk-O4TP64YU.mjs";
import "./chunk-4HRTWHYX.mjs";
import "./chunk-MZRLAGO3.mjs";
import "./chunk-SSBZ77W5.mjs";
import "./chunk-BSPEQE4E.mjs";
import "./chunk-7AGEPDQ2.mjs";
import "./chunk-X7CUXOZW.mjs";
import "./chunk-GGYP7UAT.mjs";
import "./chunk-B46YFNHS.mjs";
import "./chunk-DGSHHA5W.mjs";
import {
  decodeAddressByProtocol,
  encodeAddressByProtocol,
  encodingByProtocol
} from "./chunk-UBQM5UAE.mjs";
import "./chunk-XDKM2REL.mjs";
import "./chunk-D3P3BVAP.mjs";
import {
  ALGORAND,
  ALL_PROTOCOLS,
  ETHEREUM,
  MAILCHAIN,
  NEAR,
  SOLANA,
  SUBSTRATE,
  TEZOS,
  isBlockchainProtocolEnabled
} from "./chunk-53HGU7GY.mjs";
import {
  ProtocolNotSupportedError
} from "./chunk-EPSSV5JD.mjs";
import "./chunk-NHABU752.mjs";

// src/test.constants.ts
var EthereumAlice = new Uint8Array([
  213,
  171,
  76,
  227,
  96,
  92,
  213,
  144,
  219,
  96,
  155,
  107,
  92,
  137,
  1,
  253,
  178,
  239,
  127,
  230
]);
var EthereumBob = new Uint8Array([
  146,
  216,
  241,
  2,
  72,
  198,
  163,
  149,
  60,
  195,
  105,
  42,
  137,
  70,
  85,
  173,
  5,
  214,
  30,
  251
]);
export {
  ALGORAND,
  ALL_PROTOCOLS,
  BadlyFormattedAddressError,
  ETHEREUM,
  EthereumAlice,
  EthereumBob,
  IdentityProviderAddressInvalidError,
  MAILCHAIN,
  NEAR,
  ProtocolNotSupportedError,
  SOLANA,
  SUBSTRATE,
  TEZOS,
  addressFromPublicKey,
  checkAddressForErrors,
  createNameServiceAddress,
  createWalletAddress,
  decodeAddressByProtocol,
  encodeAddressByProtocol,
  encodingByProtocol,
  formatAddress,
  isBlockchainProtocolEnabled,
  isEthereumAddress,
  isFilecoinAddress,
  isMailchainAccountAddress,
  isNameServiceAddress,
  isNearImplicitAccount,
  isSameAddress,
  isSolanaAddress,
  isTezosAddress,
  isTokenAddress,
  parseNameServiceAddress,
  parseWalletAddress
};
