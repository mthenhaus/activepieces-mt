// src/nameServiceAddress.ts
function createNameServiceAddress(username, ...domainParts) {
  const domain = domainParts.filter((d) => d != null).join(".").toLowerCase();
  if (username && username.length > 0 && domain && domain.length > 0)
    return { username, domain };
  throw new Error(`invalid name service address with username [${username}] and domain [${domain}]`);
}
function parseNameServiceAddress(address) {
  const addressParts = address.split("@");
  if (addressParts.length !== 2)
    throw new Error(`invalid address format of [${address}]`);
  return createNameServiceAddress(addressParts[0], addressParts[1]);
}
function isNameServiceAddress(a) {
  return typeof a.username === "string" && typeof a.domain === "string";
}

export {
  createNameServiceAddress,
  parseNameServiceAddress,
  isNameServiceAddress
};
