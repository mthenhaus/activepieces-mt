"use strict";Object.defineProperty(exports, "__esModule", {value: true});// src/hex.ts
function encodeHexZeroX(input) {
  return "0x" + encodeHex(input);
}
function decodeHexZeroX(input) {
  if (input === "") {
    throw new RangeError("empty hex string");
  }
  if (!input.startsWith("0x")) {
    throw new RangeError("must start with '0x'");
  }
  return decodeHex(input.slice(2));
}
function encodeHex(input) {
  return Buffer.from(input).toString("hex");
}
function decodeHex(input) {
  const output = new Uint8Array(Buffer.from(input, "hex"));
  if (output.length === 0 || input.length === 0) {
    throw RangeError("invalid hex encoding");
  }
  return output;
}
function isHex(input) {
  return new RegExp("^[a-fA-F0-9]+$").test(input);
}
function isHexZeroX(input) {
  return new RegExp("^0x[a-fA-F0-9]+$").test(input);
}
function isAnyHex(input) {
  if (input.startsWith("0x")) {
    input = input.substring(2);
  }
  return isHex(input);
}
function decodeHexAny(input) {
  if (input.startsWith("0x")) {
    input = input.substring(2);
  }
  return decodeHex(input);
}










exports.encodeHexZeroX = encodeHexZeroX; exports.decodeHexZeroX = decodeHexZeroX; exports.encodeHex = encodeHex; exports.decodeHex = decodeHex; exports.isHex = isHex; exports.isHexZeroX = isHexZeroX; exports.isAnyHex = isAnyHex; exports.decodeHexAny = decodeHexAny;
