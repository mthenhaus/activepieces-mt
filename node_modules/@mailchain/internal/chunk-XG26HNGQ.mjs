// src/sending/mail/convertSendMailParams.ts
import { secureRandom } from "@mailchain/crypto";
import { encodeBase64 } from "@mailchain/encoding";
function toMailData(params) {
  const mailDomain = params.from.split("@")[1];
  return {
    id: `${encodeBase64(secureRandom(32))}@${mailDomain}`,
    date: /* @__PURE__ */ new Date(),
    subject: params.subject,
    from: createMailAddress(params.from),
    replyTo: params.replyTo ? createMailAddress(params.replyTo) : void 0,
    recipients: params.to?.map((to) => createMailAddress(to)) ?? [],
    carbonCopyRecipients: params.cc?.map((cc) => createMailAddress(cc)) ?? [],
    blindCarbonCopyRecipients: params.bcc?.map((bcc) => createMailAddress(bcc)) ?? [],
    message: params.content.html?.toString() ?? "",
    plainTextMessage: params.content.text?.toString() ?? ""
  };
}
function createMailAddress(address) {
  const name = address.split("@")[0];
  return { name, address };
}
function fromMailData(mailData) {
  return {
    from: mailData.from.address,
    to: mailData.recipients.map((r) => r.address),
    cc: mailData.carbonCopyRecipients.map((r) => r.address),
    bcc: mailData.blindCarbonCopyRecipients.map((r) => r.address),
    subject: mailData.subject,
    content: {
      html: mailData.message,
      text: mailData.plainTextMessage
    }
  };
}

export {
  toMailData,
  createMailAddress,
  fromMailData
};
