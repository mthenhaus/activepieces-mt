import { AxiosInstance } from 'axios';
import { Payload } from '../../transport/payload/payload.js';
import { ResolvedMailerPayload } from '../../transport/mailer/payload.js';
import { Configuration } from '../../configuration.js';
import { MailerAuthorVerifier } from './author.js';
import '@mailchain/crypto';
import '../../transport/payload/headers.js';
import '../../transport/mailer/content.js';
import '@mailchain/signatures';
import '../../transport/mail/types.js';
import '../../transport/verifier/sender.js';
import '../../messagingKeys-f886bff1.js';
import '@mailchain/addressing';
import '@mailchain/api';
import '../../mailchainResult.js';
import '../../errors/unexpected.js';
import '../../messagingKeys/errors.js';
import '../../messagingKeys/proof.js';
import '../../messagingKeys/contractResolvers/resolver.js';
import '../../messagingKeys/contractResolvers/errors.js';
import '../../messagingKeys/verify.js';

declare class MailerContentResolver {
    private readonly axiosInstance;
    private readonly sender;
    constructor(axiosInstance: AxiosInstance, sender: MailerAuthorVerifier);
    static create(configuration: Configuration, axiosInstance?: AxiosInstance): MailerContentResolver;
    get(payload: Payload): Promise<ResolvedMailerPayload>;
}

export { MailerContentResolver };
