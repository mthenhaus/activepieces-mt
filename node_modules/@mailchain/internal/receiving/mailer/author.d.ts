import { Configuration } from '../../configuration.js';
import { MailerPayload } from '../../transport/mailer/payload.js';
import { SenderVerifier } from '../../transport/verifier/sender.js';
import '@mailchain/crypto';
import '../../transport/payload/payload.js';
import '../../transport/payload/headers.js';
import '../../transport/mailer/content.js';
import '@mailchain/signatures';
import '../../transport/mail/types.js';
import '../../messagingKeys-f886bff1.js';
import '@mailchain/addressing';
import '@mailchain/api';
import '../../mailchainResult.js';
import '../../errors/unexpected.js';
import '../../messagingKeys/errors.js';
import '../../messagingKeys/proof.js';
import 'axios';
import '../../messagingKeys/contractResolvers/resolver.js';
import '../../messagingKeys/contractResolvers/errors.js';
import '../../messagingKeys/verify.js';

declare class MailerAuthorVerifier {
    private readonly senderVerifier;
    constructor(senderVerifier: SenderVerifier);
    static create(configuration: Configuration): MailerAuthorVerifier;
    /**
     * Checks if the author of the mailer is the same as the from address.
     * @param payload - The mailer payload
     * @returns
     */
    verifyAuthorOwnsFromAddress(payload: MailerPayload, rfcMail: Buffer): Promise<boolean>;
}

export { MailerAuthorVerifier };
