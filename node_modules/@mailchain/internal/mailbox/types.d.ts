import { PublicKey } from '@mailchain/crypto';
import { PayloadHeaders } from '../transport/payload/headers.js';

type MessagesOverview = {
    total: number;
    unread: number;
    folders: Map<string, FolderMessagesOverview>;
};
type FolderMessagesOverview = {
    total: number;
    unread: number;
    mailboxes: Map<string, MailboxMessagesOverview>;
};
type MailboxMessagesOverview = {
    total: number;
    unread: number;
};
type MessageKind = 'mail' | 'vc-request';
type MessagePreview = {
    kind: MessageKind;
    mailbox: PublicKey;
    messageId: string;
    from: string;
    owner: string;
    subject: string;
    snippet: string;
    isRead: boolean;
    systemLabels: SystemMessageLabel[];
    hasAttachment: boolean;
    timestamp: Date;
    to: string[];
    cc: string[];
    bcc: string[];
};
type Message<H extends PayloadHeaders = PayloadHeaders> = {
    replyTo?: string;
    body: string;
    payloadHeaders: H;
};
/** Copy from services/inbox/internal/datastore/labels.go */
declare const SYSTEM_MESSAGE_LABELS: readonly ["archive", "draft", "inbox", "sent", "spam", "starred", "trash", "unread", "outbox"];
type SystemMessageLabel = (typeof SYSTEM_MESSAGE_LABELS)[number];
type UserMessageLabel = string;

export { FolderMessagesOverview, MailboxMessagesOverview, Message, MessageKind, MessagePreview, MessagesOverview, SYSTEM_MESSAGE_LABELS, SystemMessageLabel, UserMessageLabel };
