"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _chunkMTKPWAB7js = require('./chunk-MTKPWAB7.js');


var _chunkHMHFMIANjs = require('./chunk-HMHFMIAN.js');

// src/sending/mail/payloads.ts
async function createMailPayloads(senderMessagingKey, resolvedAddresses, mailData, payloadPluginHeaders) {
  const message = await _chunkHMHFMIANjs.createMimeMessage.call(void 0, mailData, resolvedAddresses);
  const original = await _chunkMTKPWAB7js.createPayload.call(void 0, 
    senderMessagingKey,
    Buffer.from(message.original),
    "message/x.mailchain",
    payloadPluginHeaders
  );
  const visibleRecipientsPayload = await _chunkMTKPWAB7js.createPayload.call(void 0, 
    senderMessagingKey,
    Buffer.from(message.visibleRecipients),
    "message/x.mailchain",
    payloadPluginHeaders
  );
  const blindRecipients = await Promise.all(
    message.blindRecipients.map(async ({ recipient, content }) => ({
      recipients: [recipient.address],
      payload: await _chunkMTKPWAB7js.createPayload.call(void 0, 
        senderMessagingKey,
        Buffer.from(content),
        "message/x.mailchain",
        payloadPluginHeaders
      )
    }))
  );
  return {
    original,
    distributions: [
      {
        recipients: [
          ...mailData.recipients.map((x) => x.address),
          ...mailData.carbonCopyRecipients.map((x) => x.address)
        ],
        payload: visibleRecipientsPayload
      },
      ...blindRecipients
    ]
  };
}



exports.createMailPayloads = createMailPayloads;
