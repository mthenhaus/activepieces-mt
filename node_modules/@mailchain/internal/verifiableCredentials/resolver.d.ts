import { Resolvable, DIDResolutionOptions, DIDResolutionResult } from 'did-resolver';
import { Configuration } from '../configuration.js';
import { M as MessagingKeys, R as ResolvedAddress } from '../messagingKeys-f886bff1.js';
import '@mailchain/addressing';
import '@mailchain/crypto';
import '@mailchain/api';
import '@mailchain/signatures';
import '../mailchainResult.js';
import '../errors/unexpected.js';
import '../messagingKeys/errors.js';
import '../messagingKeys/proof.js';
import 'axios';
import '../messagingKeys/contractResolvers/resolver.js';
import '../messagingKeys/contractResolvers/errors.js';
import '../messagingKeys/verify.js';

declare class MailchainDIDMessagingKeyResolver implements Resolvable {
    private readonly messagingKeys;
    constructor(messagingKeys: MessagingKeys);
    static create(configuration?: Configuration): MailchainDIDMessagingKeyResolver;
    resolve(didUrl: string, _options?: DIDResolutionOptions): Promise<DIDResolutionResult>;
}
declare function createDidDocumentFromResolvedAddress(didUrl: string, resolvedAddress: ResolvedAddress): DIDResolutionResult;

export { MailchainDIDMessagingKeyResolver, createDidDocumentFromResolvedAddress };
