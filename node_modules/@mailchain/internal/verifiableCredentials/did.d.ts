import { ProtocolType } from '@mailchain/addressing';

type DecentralizedIdentifier<S extends string = string> = MailchainDecentralizedIdentifier<S> | MailchainMessagingKeyDecentralizedIdentifier<S>;
type MailchainDecentralizedIdentifier<S extends string = string> = `did:mailchain:${S}`;
declare function mailchainAddressDecentralizedIdentifier(address: string): MailchainDecentralizedIdentifier;
declare function isMailchainAddressDecentralizedIdentifier(did: string): did is MailchainDecentralizedIdentifier;
declare function mailchainAddressFromDecentralizedIdentifier(did: MailchainDecentralizedIdentifier): string;
type MailchainMessagingKeyDecentralizedIdentifier<S extends string = string> = `did:mailchain:${S}/messaging-key`;
declare function mailchainMessagingKeyDecentralizedIdentifier(address: string): MailchainMessagingKeyDecentralizedIdentifier;
type MailchainBlockchainAddressDecentralizedIdentifier<P extends ProtocolType = ProtocolType, S extends string = string> = `did:mailchain:${P}:${S}`;
declare function mailchainBlockchainAddressDecentralizedIdentifier<P extends ProtocolType, S extends string>(protocol: P, protocolAddress: S): MailchainBlockchainAddressDecentralizedIdentifier<P, S>;

export { DecentralizedIdentifier, MailchainBlockchainAddressDecentralizedIdentifier, MailchainDecentralizedIdentifier, MailchainMessagingKeyDecentralizedIdentifier, isMailchainAddressDecentralizedIdentifier, mailchainAddressDecentralizedIdentifier, mailchainAddressFromDecentralizedIdentifier, mailchainBlockchainAddressDecentralizedIdentifier, mailchainMessagingKeyDecentralizedIdentifier };
