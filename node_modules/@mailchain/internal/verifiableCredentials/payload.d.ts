import { VerifiableCredential } from 'did-jwt-vc';
import { Proof } from 'did-jwt-vc/lib/types';
import { DecentralizedIdentifier } from './did.js';
import { TermsOfUse } from './termsOfUse.js';
import { CredentialSubject } from './subject.js';
import '@mailchain/addressing';

declare const CredentialPayloadTypes: readonly ["MailchainMessagingKeyCredential"];
type CredentialPayloadType = (typeof CredentialPayloadTypes)[number];
type CreateVerifiableCredentialParams = {
    type: CredentialPayloadType;
    credentialSubjects: CredentialSubject[];
    issuanceDate: Date;
    issuerId: DecentralizedIdentifier;
    termsOfUse: TermsOfUse[];
    proof: Proof;
};
/**
 * Creates a verifiable credential using a provided proof instead of signature.
 */
declare function createVerifiableCredential(params: CreateVerifiableCredentialParams): VerifiableCredential;

export { CredentialPayloadType, CredentialPayloadTypes, createVerifiableCredential };
