import { SyncResult, MessageSync } from './messageSync.js';
import { KeyRingDecrypter } from '@mailchain/keyring/functions';
import { MessagingKeysApiInterface } from '@mailchain/api';
import { KeyRing } from '@mailchain/keyring';
import { IdentityKeys } from '../identityKeys/identityKeys.js';
import { Configuration } from '../configuration.js';
import { UserMailbox } from '../user/types.js';
import 'axios';
import '../receiving/mail/mail.js';
import '../transport/payload/payload.js';
import '@mailchain/crypto';
import '../transport/payload/headers.js';
import '../receiving/payload/payload.js';
import '../receiving/deliveryRequests/deliveryRequests.js';
import '../transport/payload/verifier.js';
import '../receiving/mailer/mailer.js';
import '../transport/mailer/payload.js';
import '../transport/mailer/content.js';
import '@mailchain/signatures';
import '../transport/mail/types.js';
import '../receiving/mailer/author.js';
import '../transport/verifier/sender.js';
import '../messagingKeys-f886bff1.js';
import '@mailchain/addressing';
import '../mailchainResult.js';
import '../errors/unexpected.js';
import '../messagingKeys/errors.js';
import '../messagingKeys/proof.js';
import '../messagingKeys/contractResolvers/resolver.js';
import '../messagingKeys/contractResolvers/errors.js';
import '../messagingKeys/verify.js';
import '../index-0d80c229.js';
import '../formatters/parse.js';
import '../mailbox/types.js';
import '../mailboxRuleEngine/rule.js';
import '../mailbox/addressHasher.js';
import '../mailbox/addressIdentityKeyResolver.js';
import '../mailbox/messageCrypto.js';
import '../mailbox/messageId.js';
import '../mailbox/messageMailboxOwnerMatcher.js';
import '../mailbox/migrations.js';
import 'protobufjs';
import '../migration.js';
import '../mailbox/userMailboxHasher.js';

type Address = {
    protocol: string;
    address: string;
};
type PrevSyncResult = SyncResult & {
    address: Address;
};
declare class PreviousMessageSync {
    private readonly identityKeys;
    private readonly messagingKeysApiFactory;
    private readonly keyRing;
    private readonly messageSync;
    constructor(identityKeys: IdentityKeys, messagingKeysApiFactory: (messagingKey: KeyRingDecrypter) => MessagingKeysApiInterface, keyRing: KeyRing, messageSync: MessageSync);
    static create(sdkConfig: Configuration, keyRing: KeyRing, messageSync: MessageSync): PreviousMessageSync;
    sync(mailbox: UserMailbox): Promise<PrevSyncResult[]>;
}

export { PrevSyncResult, PreviousMessageSync };
