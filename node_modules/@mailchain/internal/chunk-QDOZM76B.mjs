import {
  createContentBuffer
} from "./chunk-5J52SPEE.mjs";

// src/transport/mailer/payload.ts
import { KindNaClSecretKey } from "@mailchain/crypto";
import { EncodingTypes } from "@mailchain/encoding";
function isMailerHeaders(headers) {
  return headers.ContentType === "message/x.mailchain-mailer" && !Object.hasOwn(headers, "MailerContent");
}
function isMailerPayload(payload) {
  return isMailerHeaders(payload.Headers);
}
function isResolvedMailerHeaders(headers) {
  return headers.ContentType === "message/x.mailchain-mailer" && Object.hasOwn(headers, "MailerContent");
}
function isResolvedMailerPayload(payload) {
  return isResolvedMailerHeaders(payload.Headers);
}
async function createMailerPayload(mailerMessagingKey, mailerContent) {
  const mailerContentBuffer = Buffer.from(createContentBuffer(mailerContent));
  return {
    Headers: {
      Origin: mailerMessagingKey.publicKey,
      ContentSignature: await mailerMessagingKey.sign(mailerContentBuffer),
      Created: /* @__PURE__ */ new Date(),
      ContentLength: mailerContentBuffer.length,
      ContentType: "message/x.mailchain-mailer",
      ContentEncoding: EncodingTypes.Base64,
      ContentEncryption: KindNaClSecretKey
    },
    Content: mailerContentBuffer
  };
}

export {
  isMailerHeaders,
  isMailerPayload,
  isResolvedMailerHeaders,
  isResolvedMailerPayload,
  createMailerPayload
};
