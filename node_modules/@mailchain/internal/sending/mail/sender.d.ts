import { PrepareMailError, MailPreparer } from './prepare.js';
import { SignerWithPublicKey } from '@mailchain/crypto';
import { Configuration } from '../../configuration.js';
import { MailchainResult } from '../../mailchainResult.js';
import { S as SentPayloadDistributionRequests, d as DistributePayloadError, P as PayloadDistributor } from '../../index-f3cb9684.js';
import { SendMailParams } from './sendMailParams.js';
import '@mailchain/signatures';
import '../../messagingKeys-f886bff1.js';
import '@mailchain/addressing';
import '@mailchain/api';
import '../../errors/unexpected.js';
import '../../messagingKeys/errors.js';
import '../../messagingKeys/proof.js';
import 'axios';
import '../../messagingKeys/contractResolvers/resolver.js';
import '../../messagingKeys/contractResolvers/errors.js';
import '../../messagingKeys/verify.js';
import '../../transport/distribution/distribution.js';
import '../../transport/payload/payload.js';
import '../../transport/payload/headers.js';
import '../../transport/mail/types.js';
import '../../transport/verifier/sender.js';
import '../errors.js';
import '../deliveryRequests/deliveryRequests.js';
import '../payload/store.js';

/**
 * The result of sending a mail. This contains the delivery requests for each recipient in the mail.
 */
type SentMail = {
    /**
     * The result of the delivery requests for each recipient in the mail.
     */
    sentMailDeliveryRequests: SentPayloadDistributionRequests;
};
type SendMailError = PrepareMailError | DistributePayloadError;
declare class MailSender {
    private readonly senderMessagingKey;
    private readonly mailPreparer;
    private readonly payloadDistributor;
    constructor(senderMessagingKey: SignerWithPublicKey, mailPreparer: MailPreparer, payloadDistributor: PayloadDistributor);
    static fromSenderMessagingKey(senderMessagingKey: SignerWithPublicKey, configuration?: Configuration): MailSender;
    /**
     * Send a mail to any blockchain or Mailchain address using the address Messaging Key.
     *
     * @param params {@link SendMailParams} - The parameters for sending a mail.
     * @returns
     */
    sendMail(params: SendMailParams): Promise<MailchainResult<SentMail, SendMailError>>;
}

export { MailSender, SendMailError, SentMail };
