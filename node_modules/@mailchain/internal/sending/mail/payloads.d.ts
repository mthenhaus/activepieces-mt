import { SignerWithPublicKey } from '@mailchain/crypto';
import { Distribution } from '../../transport/distribution/distribution.js';
import { MailData } from '../../transport/mail/types.js';
import { Payload } from '../../transport/payload/payload.js';
import { R as ResolvedAddress } from '../../messagingKeys-f886bff1.js';
import '../../transport/payload/headers.js';
import '@mailchain/addressing';
import '@mailchain/api';
import '@mailchain/signatures';
import '../../configuration.js';
import '../../mailchainResult.js';
import '../../errors/unexpected.js';
import '../../messagingKeys/errors.js';
import '../../messagingKeys/proof.js';
import 'axios';
import '../../messagingKeys/contractResolvers/resolver.js';
import '../../messagingKeys/contractResolvers/errors.js';
import '../../messagingKeys/verify.js';

declare function createMailPayloads(senderMessagingKey: SignerWithPublicKey, resolvedAddresses: Map<string, ResolvedAddress>, mailData: MailData, payloadPluginHeaders?: Record<string, unknown>): Promise<{
    original: Payload;
    distributions: Distribution[];
}>;

export { createMailPayloads };
