"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }// src/user/consolidateMailbox.ts
var _addressing = require('@mailchain/addressing');
var _unionWithjs = require('lodash/unionWith.js'); var _unionWithjs2 = _interopRequireDefault(_unionWithjs);
function consolidateMailbox(mailbox) {
  const consolidators = [consolidateMailboxLabel, consolidateMailboxAliases];
  return consolidators.reduce((prev, consolidator) => consolidator(prev), mailbox);
}
function consolidateMailboxLabel(mailbox) {
  return { ...mailbox, label: _optionalChain([mailbox, 'access', _ => _.label, 'optionalAccess', _2 => _2.trim, 'call', _3 => _3()]) || null };
}
function consolidateMailboxAliases(mailbox) {
  return {
    ...mailbox,
    aliases: _unionWithjs2.default.call(void 0, mailbox.aliases, (a, b) => _addressing.isSameAddress.call(void 0, a.address, b.address))
  };
}





exports.consolidateMailbox = consolidateMailbox; exports.consolidateMailboxLabel = consolidateMailboxLabel; exports.consolidateMailboxAliases = consolidateMailboxAliases;
