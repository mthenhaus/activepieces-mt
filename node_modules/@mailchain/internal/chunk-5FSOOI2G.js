"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _chunkESCCOX3Vjs = require('./chunk-ESCCOX3V.js');

// src/transport/verifier/sender.ts
var _crypto = require('@mailchain/crypto');
var SenderVerifier = class {
  constructor(messagingKeys) {
    this.messagingKeys = messagingKeys;
  }
  static create(configuration) {
    return new SenderVerifier(_chunkESCCOX3Vjs.MessagingKeys.create(configuration));
  }
  /**
   *
   * @param fromAddress address that sent the mail. `From:` header in the mail.
   * @param senderMessagingKey public key of the sender.
   * @param at Date to resolve the sender messaging key. When no date is provided, the address resolves using the latest block.
   * @returns
   */
  async verifySenderOwnsFromAddress(fromAddress, senderMessagingKey, at) {
    const { data: resolvedSenderMessagingKey, error } = await this.messagingKeys.resolve(fromAddress, at);
    if (error != null) {
      return false;
    }
    return _crypto.isPublicKeyEqual.call(void 0, resolvedSenderMessagingKey.messagingKey, senderMessagingKey);
  }
};



exports.SenderVerifier = SenderVerifier;
