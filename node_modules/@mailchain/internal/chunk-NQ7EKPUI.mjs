// src/mailbox/addressIdentityKeyResolver.ts
import {
  decodeAddressByProtocol,
  formatAddress,
  addressFromPublicKey
} from "@mailchain/addressing";
import isEqual from "lodash/isEqual.js";
function createMailchainApiAddressIdentityKeyResolver(identityKeys) {
  return (address) => identityKeys.getAddressIdentityKey(address);
}
function createMessageHeaderIdentityKeyResolver(addressIdentityKeys) {
  return async (address) => {
    const entry = addressIdentityKeys.get(formatAddress(address, "mail"));
    if (entry == null)
      return null;
    try {
      const actualAddressBytes = decodeAddressByProtocol(address.username, entry.protocol).decoded;
      const expectedAddressBytes = await addressFromPublicKey(entry.identityKey, entry.protocol);
      if (isEqual(expectedAddressBytes, actualAddressBytes))
        return entry;
    } catch (e) {
    }
    return null;
  };
}

export {
  createMailchainApiAddressIdentityKeyResolver,
  createMessageHeaderIdentityKeyResolver
};
