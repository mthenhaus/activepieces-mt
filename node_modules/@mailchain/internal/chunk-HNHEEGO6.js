"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _chunkAZWVETE6js = require('./chunk-AZWVETE6.js');



var _chunkIXZMJHSYjs = require('./chunk-IXZMJHSY.js');


var _chunkRQT6CC6Tjs = require('./chunk-RQT6CC6T.js');


var _chunkI6LRDV5Yjs = require('./chunk-I6LRDV5Y.js');


var _chunkVPET7X4Njs = require('./chunk-VPET7X4N.js');

// src/mailbox/messageCrypto.ts
var _crypto = require('@mailchain/crypto');
function createMailchainMessageCrypto(keyRing) {
  const inboxKey = _crypto.ED25519ExtendedPrivateKey.fromPrivateKey(keyRing.rootInboxKey());
  const headersSerializer = new (0, _chunkAZWVETE6js.SerializablePayloadHeadersImpl)();
  const encrypt = async (payload) => {
    const headers = headersSerializer.serialize(payload.Headers);
    const encryptedPayload = await _chunkI6LRDV5Yjs.encryptPayload.call(void 0, headers, payload.Content, inboxKey, _chunkVPET7X4Njs.CHUNK_LENGTH_1MB);
    const serializedContent = _chunkIXZMJHSYjs.serialize.call(void 0, encryptedPayload);
    return new Uint8Array(serializedContent);
  };
  const decrypt = async (serializedContent) => {
    const encryptedPayload = _chunkIXZMJHSYjs.deserialize.call(void 0, Buffer.from(serializedContent));
    const { headers, content } = await _chunkRQT6CC6Tjs.decryptPayload.call(void 0, encryptedPayload, inboxKey);
    return {
      Content: content,
      Headers: headersSerializer.deserialize(headers)
    };
  };
  return { encrypt, decrypt };
}



exports.createMailchainMessageCrypto = createMailchainMessageCrypto;
