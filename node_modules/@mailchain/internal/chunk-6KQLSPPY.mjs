import {
  SenderVerifier
} from "./chunk-DIZUCS2B.mjs";
import {
  parseMailerContentFromJSON
} from "./chunk-5J52SPEE.mjs";
import {
  parseMimeText
} from "./chunk-A3TD54MW.mjs";

// src/receiving/mailer/author.ts
var MailerAuthorVerifier = class {
  constructor(senderVerifier) {
    this.senderVerifier = senderVerifier;
  }
  static create(configuration) {
    return new MailerAuthorVerifier(SenderVerifier.create(configuration));
  }
  /**
   * Checks if the author of the mailer is the same as the from address.
   * @param payload - The mailer payload
   * @returns
   */
  async verifyAuthorOwnsFromAddress(payload, rfcMail) {
    const mailerContent = parseMailerContentFromJSON(payload.Content.toString());
    const parsedContent = await parseMimeText(rfcMail);
    if (mailerContent.authorMailAddress.address !== parsedContent.mailData.from.address) {
      throw new Error("author address does not match from address");
    }
    return await this.senderVerifier.verifySenderOwnsFromAddress(
      parsedContent.mailData.from.address,
      mailerContent.authorMessagingKey
    );
  }
};

export {
  MailerAuthorVerifier
};
