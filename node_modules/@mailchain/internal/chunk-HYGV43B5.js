"use strict";Object.defineProperty(exports, "__esModule", {value: true});// src/transport/payload/verifier.ts
var ErrorPayloadSignatureInvalid = class extends Error {
  constructor() {
    super("payload signature invalid");
  }
};
var PayloadOriginVerifier = class {
  static create() {
    return new PayloadOriginVerifier();
  }
  async verifyPayloadOrigin(payload) {
    if (!payload.Headers) {
      throw new Error("payload does not contain Headers");
    }
    if (!payload.Headers.Origin) {
      throw new Error("payload does not contain Headers.Origin");
    }
    if (!await payload.Headers.Origin.verify(payload.Content, payload.Headers.ContentSignature)) {
      throw new ErrorPayloadSignatureInvalid();
    }
  }
};




exports.ErrorPayloadSignatureInvalid = ErrorPayloadSignatureInvalid; exports.PayloadOriginVerifier = PayloadOriginVerifier;
