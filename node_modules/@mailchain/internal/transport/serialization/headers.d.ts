import { PublicKey } from '@mailchain/crypto';
import { PayloadHeaders } from '../payload/headers.js';

interface PayloadHeadersSerializer {
    serialize(headers: PayloadHeaders): Buffer;
    deserialize(serializedHeaders: Buffer): PayloadHeaders;
}
declare function parseHeaderElements(input: string, requiredKeys: string[]): Map<string, string>;
declare function parseSignatureHeader(input: string): Uint8Array;
declare function createSignatureHeader(signature: Uint8Array, signer: PublicKey): string;
declare function parseOriginHeader(input: string): PublicKey;
declare function createOriginHeader(signer: PublicKey): string;
declare function headersMapFromBuffers(buffer: Buffer, requiredHeaders: string[]): {
    headers: Map<string, string>;
    invalidHeaders: string[];
};

export { PayloadHeadersSerializer, createOriginHeader, createSignatureHeader, headersMapFromBuffers, parseHeaderElements, parseOriginHeader, parseSignatureHeader };
