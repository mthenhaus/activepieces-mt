import { SignerWithPublicKey } from '@mailchain/crypto';
import { Payload } from '../payload/payload.js';
import { PayloadHeaders } from '../payload/headers.js';
import { MailerContent } from './content.js';
import '@mailchain/signatures';
import '../mail/types.js';

type MailerHeaders = PayloadHeaders<'message/x.mailchain-mailer'>;
type MailerPayload = Payload<MailerHeaders>;
declare function isMailerHeaders(headers: PayloadHeaders): headers is MailerHeaders;
declare function isMailerPayload(payload: Payload): payload is MailerPayload;
type ResolvedMailerHeaders = {
    MailerContent: MailerContent;
} & MailerHeaders;
type ResolvedMailerPayload = Payload<ResolvedMailerHeaders>;
declare function isResolvedMailerHeaders(headers: PayloadHeaders): headers is ResolvedMailerHeaders;
declare function isResolvedMailerPayload(payload: Payload): payload is ResolvedMailerPayload;
declare function createMailerPayload(mailerMessagingKey: SignerWithPublicKey, mailerContent: MailerContent): Promise<MailerPayload>;

export { MailerHeaders, MailerPayload, ResolvedMailerHeaders, ResolvedMailerPayload, createMailerPayload, isMailerHeaders, isMailerPayload, isResolvedMailerHeaders, isResolvedMailerPayload };
