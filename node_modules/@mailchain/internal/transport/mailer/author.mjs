import "../../chunk-CSLSWHJJ.mjs";
import {
  SenderVerifier
} from "../../chunk-DIZUCS2B.mjs";
import "../../chunk-NBN7JFU7.mjs";
import "../../chunk-UED6JO6O.mjs";
import "../../chunk-NK6CIHSE.mjs";
import "../../chunk-FGMUYFWH.mjs";
import "../../chunk-4GZNHUSO.mjs";
import "../../chunk-VRCX4BTH.mjs";
import "../../chunk-3U3NVNQQ.mjs";
import "../../chunk-GFHS4OJJ.mjs";
import "../../chunk-VHRK63OY.mjs";
import "../../chunk-TACI5AZH.mjs";
import "../../chunk-E5ONHO3D.mjs";
import "../../chunk-TVSW4CHH.mjs";
import "../../chunk-OUYN2CJO.mjs";
import "../../chunk-QQZCHFKV.mjs";
import "../../chunk-NHABU752.mjs";

// src/transport/mailer/author.ts
import { verifyMailerProof } from "@mailchain/signatures";
var MailerAuthorVerifier = class {
  constructor(sender) {
    this.sender = sender;
  }
  static create(configuration) {
    return new MailerAuthorVerifier(SenderVerifier.create(configuration));
  }
  async verifyMailerAuthor(mailerContent) {
    if (!this.verifyMailerProof(mailerContent.authorMessagingKey, mailerContent.mailerProof)) {
      throw new Error("mailer proof is not valid");
    }
    if (!this.verifyAuthorWroteContent(
      mailerContent.contentUri,
      mailerContent.mailerProof.params.authorContentSignature,
      mailerContent.authorMessagingKey
    )) {
      throw new Error("authorContentSignature is not valid");
    }
    if (!this.verifyAuthorOwnsFromAddress(mailerContent.authorMailAddress, mailerContent.authorMessagingKey)) {
      throw new Error("messaging is not the latest message key for author address");
    }
    return;
  }
  async verifyAuthorWroteContent(contentUri, authorContentSignature, authorMessagingKey) {
    return authorMessagingKey.verify(Buffer.from(contentUri), authorContentSignature);
  }
  async verifyAuthorOwnsFromAddress(fromAddress, authorMessagingKey) {
    return await this.sender.verifySenderOwnsFromAddress(fromAddress.address, authorMessagingKey);
  }
  async verifyMailerProof(authorMessagingKey, mailerProof) {
    return verifyMailerProof(authorMessagingKey, mailerProof);
  }
};
export {
  MailerAuthorVerifier
};
