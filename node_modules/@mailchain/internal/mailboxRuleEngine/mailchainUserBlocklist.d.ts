import { UserProfile } from '../user/userProfile.js';
import { ConditionIsFromAddress } from './conditions.js';
import { MailboxRule, MailboxRuleCondition, MailboxRuleAction } from './rule.js';
import '@mailchain/crypto';
import '@mailchain/api';
import '../configuration.js';
import '../user/migrations.js';
import '../identityKeys/identityKeys.js';
import '@mailchain/addressing';
import '../nameservices/nameservices.js';
import '../user/types.js';
import 'protobufjs';
import '../migration.js';

/**
 * Mailchain default rule that uses the user blocklist to mark messages as spam
 */
declare class MailchainUserBlocklistRule implements MailboxRule<unknown, unknown> {
    private readonly userProfile;
    static id: string;
    id: string;
    readonly name = "User Blocklist";
    constructor(userProfile: UserProfile);
    static create(userProfile: UserProfile): MailchainUserBlocklistRule;
    isEnabled(): Promise<boolean>;
    condition(): Promise<MailboxRuleCondition<unknown>>;
    actions(): Promise<MailboxRuleAction<unknown>[]>;
    addBlocklistEntry(blockEntry: ConditionIsFromAddress['value']): Promise<ConditionIsFromAddress['value'][]>;
    removeBlocklistEntry(blockEntry: ConditionIsFromAddress['value']): Promise<ConditionIsFromAddress['value'][]>;
    getBlocklistEntries(): Promise<ConditionIsFromAddress['value'][]>;
}

export { MailchainUserBlocklistRule };
