import {
  verifyTezosSignedMessage
} from "./chunk-RICUBO5V.mjs";
import {
  verifyRawEd25519
} from "./chunk-RNDAINMT.mjs";
import {
  KindEthereumPersonalMessage,
  KindRawED25519,
  KindTezos
} from "./chunk-XRFLHMTB.mjs";
import {
  verifyEthereumPersonalMessage
} from "./chunk-S45KIVEU.mjs";

// src/verify.ts
import { decodeUtf8 } from "@mailchain/encoding";
function verify(signingMethod, verifyingKey, message, signature) {
  switch (signingMethod) {
    case KindEthereumPersonalMessage:
      return verifyEthereumPersonalMessage(verifyingKey, decodeUtf8(message), signature);
    case KindRawED25519:
      return verifyRawEd25519(verifyingKey, decodeUtf8(message), signature);
    case KindTezos:
      return verifyTezosSignedMessage(verifyingKey, message, signature);
    default:
      throw new Error(`Signing method ${signingMethod} not supported`);
  }
}

export {
  verify
};
