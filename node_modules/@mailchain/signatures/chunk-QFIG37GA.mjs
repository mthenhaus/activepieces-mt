import {
  __publicField
} from "./chunk-NHABU752.mjs";

// src/errors.ts
var ProtocolIsEmptyError = class extends Error {
  constructor() {
    super("protocol is empty");
  }
};
var AddressIsEmptyError = class extends Error {
  constructor() {
    super("address is empty");
  }
};
var MessagingKeyVerificationError = class extends Error {
  constructor() {
    super("Messaging key validation failed and is not useable for this address.");
    __publicField(this, "type", "messaging_key_validation_failed");
    __publicField(this, "docs", "https://docs.mailchain.com/developer/errors/codes#messaging_key_validation_failed");
  }
};
var ProvidedMessagingKeyIncorrectError = class extends Error {
  constructor(type) {
    super(`Provided messaging key does not match. Use the latest messaging key owned by ${type}.`);
    __publicField(this, "type", "provided_messaging_key_incorrect");
    __publicField(this, "docs", "https://docs.mailchain.com/developer/errors/codes#provided_messaging_key_incorrect");
  }
};
var AddressMustBeProtocolAddressError = class extends Error {
  constructor() {
    super("address must be a protocol address");
  }
};
var PublicKeyNotFoundError = class extends Error {
  constructor() {
    super("Mailchain public key not found");
  }
};

export {
  ProtocolIsEmptyError,
  AddressIsEmptyError,
  MessagingKeyVerificationError,
  ProvidedMessagingKeyIncorrectError,
  AddressMustBeProtocolAddressError,
  PublicKeyNotFoundError
};
