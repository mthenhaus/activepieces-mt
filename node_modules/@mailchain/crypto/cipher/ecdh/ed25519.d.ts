import { KeyExchange } from '../keyExchange.js';
import { RandomFunction } from '../../rand.js';
import { PublicKey } from '../../public.js';
import { PrivateKey } from '../../private.js';
import { ED25519PublicKey } from '../../ed25519/public.js';
import { ED25519PrivateKey } from '../../ed25519/private.js';
import '@noble/hashes/utils';

declare class ED25519KeyExchange implements KeyExchange {
    randomFunc: RandomFunction;
    constructor(randomFunc?: RandomFunction);
    EphemeralKey(): Promise<PrivateKey>;
    SharedSecret(privateKey: PrivateKey, publicKey: PublicKey): Promise<Uint8Array>;
    static privateKeyToCurve25519(privateKey: ED25519PrivateKey): Uint8Array;
    static publicKeyToCurve25519(publicKey: ED25519PublicKey): Uint8Array;
}

export { ED25519KeyExchange };
