import { RandomFunction } from '../rand.js';
import { PrivateKey } from '../private.js';
import { SECP256R1PublicKey } from './public.js';
import '@noble/hashes/utils';
import '../public.js';

declare const SECP256R1PrivateKeyLen = 32;
declare class SECP256R1PrivateKey implements PrivateKey {
    readonly bytes: Uint8Array;
    private readonly rand;
    readonly publicKey: SECP256R1PublicKey;
    readonly curve: string;
    constructor(bytes: Uint8Array, rand?: RandomFunction);
    static generate(rand?: RandomFunction): SECP256R1PrivateKey;
    sign(message: Uint8Array): Promise<Uint8Array>;
}

export { SECP256R1PrivateKey, SECP256R1PrivateKeyLen };
