"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _chunkY3YFCCB4js = require('./chunk-Y3YFCCB4.js');


var _chunkCC5XV3ZFjs = require('./chunk-CC5XV3ZF.js');


var _chunkUGHWWL7Yjs = require('./chunk-UGHWWL7Y.js');


var _chunkEMN3YRZAjs = require('./chunk-EMN3YRZA.js');


var _chunkXXPGZHWZjs = require('./chunk-XXPGZHWZ.js');

// src/cipher/nacl/publicKeyEncrypter.ts
var PublicKeyEncrypter = class {
  constructor(keyEx, pubKey, rand = _chunkEMN3YRZAjs.secureRandom) {
    _chunkXXPGZHWZjs.__publicField.call(void 0, this, "_keyEx");
    _chunkXXPGZHWZjs.__publicField.call(void 0, this, "_pubKey");
    _chunkXXPGZHWZjs.__publicField.call(void 0, this, "_rand");
    this._rand = rand;
    this._keyEx = keyEx;
    this._pubKey = pubKey;
  }
  static FromPublicKey(key) {
    return new this(_chunkY3YFCCB4js.fromPublicKey.call(void 0, key), key);
  }
  async encrypt(input) {
    const ephemeralPrvKey = await this._keyEx.EphemeralKey();
    const sharedSecret = await this._keyEx.SharedSecret(ephemeralPrvKey, this._pubKey);
    const sealedBox = _chunkCC5XV3ZFjs.easySeal.call(void 0, input, sharedSecret, this._rand);
    return _chunkUGHWWL7Yjs.serializePublicKeyEncryptedContent.call(void 0, sealedBox, ephemeralPrvKey.publicKey);
  }
};



exports.PublicKeyEncrypter = PublicKeyEncrypter;
