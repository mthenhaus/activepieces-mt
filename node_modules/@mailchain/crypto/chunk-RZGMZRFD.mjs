// src/mnemonic/mnemonic.ts
import {
  entropyToMnemonic,
  mnemonicToEntropy,
  generateMnemonic,
  validateMnemonic,
  mnemonicToSeedSync
} from "@scure/bip39";
import { wordlist } from "@scure/bip39/wordlists/english";
function generate(words = 24) {
  return generateMnemonic(wordlist, words === 12 ? 128 : 256);
}
function toEntropy(mnemonic) {
  return mnemonicToEntropy(mnemonic, wordlist);
}
function fromEntropy(entropy) {
  return entropyToMnemonic(entropy, wordlist);
}
function validate(mnemonic) {
  return validateMnemonic(mnemonic, wordlist);
}
function toSeed(mnemonic, password, byteLength) {
  if (!validate(mnemonic)) {
    throw new Error("Invalid mnemonic");
  }
  return mnemonicToSeedSync(mnemonic, password).slice(0, byteLength === void 0 ? 32 : byteLength);
}

export {
  generate,
  toEntropy,
  fromEntropy,
  validate,
  toSeed
};
