import {
  fromPrivateKey
} from "./chunk-KMCOY7PI.mjs";
import {
  easyOpen
} from "./chunk-JWOEA4SY.mjs";
import {
  deserializePublicKeyEncryptedContent
} from "./chunk-LDK7RPVV.mjs";
import {
  __publicField
} from "./chunk-NHABU752.mjs";

// src/cipher/nacl/publicKeyDecrypter.ts
var PublicKeyDecrypter = class {
  constructor(keyEx, prvKey) {
    __publicField(this, "_keyEx");
    __publicField(this, "_prvKey");
    this._keyEx = keyEx;
    this._prvKey = prvKey;
  }
  static FromPrivateKey(key) {
    return new this(fromPrivateKey(key), key);
  }
  async decrypt(input) {
    const secretData = deserializePublicKeyEncryptedContent(input);
    const sharedSecret = await this._keyEx.SharedSecret(this._prvKey, secretData.pubKey);
    return easyOpen(secretData.encryptedContent, sharedSecret);
  }
};

export {
  PublicKeyDecrypter
};
