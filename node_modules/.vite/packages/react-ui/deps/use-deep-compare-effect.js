import {
  dequal
} from "./chunk-VA3E22H5.js";
import {
  require_react
} from "./chunk-GAIRWVJN.js";
import {
  __toESM
} from "./chunk-OL46QLBJ.js";

// ../../node_modules/use-deep-compare-effect/dist/use-deep-compare-effect.esm.js
var React = __toESM(require_react());
function checkDeps(deps) {
  if (!deps || !deps.length) {
    throw new Error("useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.");
  }
  if (deps.every(isPrimitive)) {
    throw new Error("useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.");
  }
}
function isPrimitive(val) {
  return val == null || /^[sbn]/.test(typeof val);
}
function useDeepCompareMemoize(value) {
  var ref = React.useRef(value);
  var signalRef = React.useRef(0);
  if (!dequal(value, ref.current)) {
    ref.current = value;
    signalRef.current += 1;
  }
  return React.useMemo(function() {
    return ref.current;
  }, [signalRef.current]);
}
function useDeepCompareEffect(callback, dependencies) {
  if (true) {
    checkDeps(dependencies);
  }
  return React.useEffect(callback, useDeepCompareMemoize(dependencies));
}
function useDeepCompareEffectNoCheck(callback, dependencies) {
  return React.useEffect(callback, useDeepCompareMemoize(dependencies));
}
export {
  useDeepCompareEffect as default,
  useDeepCompareEffectNoCheck,
  useDeepCompareMemoize
};
//# sourceMappingURL=use-deep-compare-effect.js.map
