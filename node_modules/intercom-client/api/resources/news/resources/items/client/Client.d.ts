/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Intercom from "../../../../../index";
export declare namespace Items {
    interface Options {
        environment?: core.Supplier<environments.IntercomEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Intercom-Version header */
        version?: "1.0" | "1.1" | "1.2" | "1.3" | "1.4" | "2.0" | "2.1" | "2.2" | "2.3" | "2.4" | "2.5" | "2.6" | "2.7" | "2.8" | "2.9" | "2.10" | "2.11" | "Unstable";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
        /** Override the Intercom-Version header */
        version?: "1.0" | "1.1" | "1.2" | "1.3" | "1.4" | "2.0" | "2.1" | "2.2" | "2.3" | "2.4" | "2.5" | "2.6" | "2.7" | "2.8" | "2.9" | "2.10" | "2.11" | "Unstable";
    }
}
export declare class Items {
    protected readonly _options: Items.Options;
    constructor(_options?: Items.Options);
    /**
     * You can fetch a list of all news items
     *
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Intercom.UnauthorizedError}
     *
     * @example
     *     await client.news.items.list()
     */
    list(requestOptions?: Items.RequestOptions): Promise<Intercom.PaginatedNewsItemResponse>;
    /**
     * You can create a news item
     *
     * @param {Intercom.NewsItemRequest} request
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Intercom.UnauthorizedError}
     *
     * @example
     *     await client.news.items.create({
     *         title: "Halloween is here!",
     *         body: "<p>New costumes in store for this spooky season</p>",
     *         sender_id: 991267734,
     *         state: "live",
     *         deliver_silently: true,
     *         labels: ["Product", "Update", "New"],
     *         reactions: ["\uD83D\uDE06", "\uD83D\uDE05"],
     *         newsfeed_assignments: [{
     *                 newsfeed_id: 53,
     *                 published_at: 1664638214
     *             }]
     *     })
     */
    create(request: Intercom.NewsItemRequest, requestOptions?: Items.RequestOptions): Promise<Intercom.NewsItem>;
    /**
     * You can fetch the details of a single news item.
     *
     * @param {Intercom.news.FindNewsItemRequest} request
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Intercom.UnauthorizedError}
     * @throws {@link Intercom.NotFoundError}
     *
     * @example
     *     await client.news.items.find({
     *         news_item_id: "123"
     *     })
     */
    find(request: Intercom.news.FindNewsItemRequest, requestOptions?: Items.RequestOptions): Promise<Intercom.NewsItem>;
    /**
     * @param {Intercom.news.UpdateNewsItemRequest} request
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Intercom.UnauthorizedError}
     * @throws {@link Intercom.NotFoundError}
     *
     * @example
     *     await client.news.items.update({
     *         news_item_id: "123",
     *         body: {
     *             title: "Christmas is here!",
     *             body: "<p>New gifts in store for the jolly season</p>",
     *             sender_id: 991267745,
     *             reactions: ["\uD83D\uDE1D", "\uD83D\uDE02"]
     *         }
     *     })
     *
     * @example
     *     await client.news.items.update({
     *         news_item_id: "123",
     *         body: {
     *             title: "Christmas is here!",
     *             body: "<p>New gifts in store for the jolly season</p>",
     *             sender_id: 991267748,
     *             reactions: ["\uD83D\uDE1D", "\uD83D\uDE02"]
     *         }
     *     })
     */
    update(request: Intercom.news.UpdateNewsItemRequest, requestOptions?: Items.RequestOptions): Promise<Intercom.NewsItem>;
    /**
     * You can delete a single news item.
     *
     * @param {Intercom.news.DeleteNewsItemRequest} request
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Intercom.UnauthorizedError}
     * @throws {@link Intercom.NotFoundError}
     *
     * @example
     *     await client.news.items.delete({
     *         news_item_id: "123"
     *     })
     */
    delete(request: Intercom.news.DeleteNewsItemRequest, requestOptions?: Items.RequestOptions): Promise<Intercom.DeletedObject>;
    protected _getAuthorizationHeader(): Promise<string>;
}
