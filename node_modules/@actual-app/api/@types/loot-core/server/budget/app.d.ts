import { BudgetHandlers } from './types/handlers';
export declare const app: {
    events: import("mitt").Emitter<{
        sync: import("../../types/server-events").ServerEvents["sync-event"];
        'load-budget': {
            id: string;
        };
    }>;
    handlers: BudgetHandlers;
    services: (() => () => void)[];
    unlistenServices: (() => void)[];
    method<Name extends "budget/budget-amount" | "budget/copy-previous-month" | "budget/set-zero" | "budget/set-3month-avg" | "budget/set-6month-avg" | "budget/set-12month-avg" | "budget/check-templates" | "budget/apply-goal-template" | "budget/overwrite-goal-template" | "budget/cleanup-goal-template" | "budget/hold-for-next-month" | "budget/reset-hold" | "budget/cover-overspending" | "budget/transfer-available" | "budget/cover-overbudgeted" | "budget/transfer-category" | "budget/set-carryover" | "budget/apply-single-template" | "budget/set-n-month-avg" | "budget/copy-single-month" | "budget/apply-multiple-templates">(name: Name, func: BudgetHandlers[Name]): void;
    service(func: () => () => void): void;
    combine(...apps: any[]): void;
    startServices(): void;
    stopServices(): void;
};
